void nextPermutation(vector<int> &num) 
{
            int len = num.size();
            int i,j;
            for(i = len - 2; i >= 0 ; i--)
                if(num[i] < num[i+1]) 
			break;

            if (i == -1) 
	    {
                reverse(num.begin(), num.end());
                return;
            }
            for(j = len - 1; j > i; j--)
                if(num[j] > num[i]) 
			break;
            swap(num[i], num[j]);
            reverse(num.begin() + i + 1, num.end());
            return;
}
I/P: 1 2 3 6 5 4
O/P: 1 2 4 3 5 6
The suffix which gets affected is in a descending order before the change (here 6 5 4).
A swap with the smaller element happens and then we reverse the affected suffix (3 swapped with 4 and then 6 5 3 is reversed).
